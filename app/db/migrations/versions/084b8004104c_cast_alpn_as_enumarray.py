"""cast alpn as EnumArray

Revision ID: 084b8004104c
Revises: 9fa4831e991a
Create Date: 2025-09-07 14:32:13.968789

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql, postgresql


# revision identifiers, used by Alembic.
revision = '084b8004104c'
down_revision = '9fa4831e991a'
branch_labels = None
depends_on = None


alpn_enum = ('none', 'h3', 'h2', 'http/1.1', 'h3,h2,http/1.1', 'h3,h2', 'h2,http/1.1')


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    connection = op.get_bind()
    dialect = connection.dialect.name

    if dialect == 'postgresql':
        op.alter_column(
        'hosts', 
        'alpn',
        existing_type=postgresql.ENUM(*alpn_enum, name="proxyhostalpn"),
        type_=sa.String(14),
        nullable=True,
        )
    elif dialect == 'mysql':
        op.alter_column(
        'hosts', 
        'alpn',
        existing_type=mysql.ENUM(*alpn_enum),
        type_=sa.String(14),
        nullable=True,
        )
    else:  # sqlite
        with op.batch_alter_table('hosts') as batch_op:
            batch_op.alter_column(
                'alpn',
                existing_type=sa.VARCHAR(length=14),
                type_=sa.String(14),
                nullable=True,
                existing_server_default=sa.text("'none'"),
                )

    op.execute("UPDATE hosts SET alpn = NULL WHERE alpn = 'none'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(f"UPDATE hosts SET alpn = 'none' WHERE alpn IS NULL OR alpn NOT IN {alpn_enum}")

    connection = op.get_bind()
    dialect = connection.dialect.name

    if dialect == 'postgresql':
        op.alter_column(
            'hosts', 
            'alpn',
            existing_type=sa.String(14),
            type_=postgresql.ENUM(*alpn_enum, name="proxyhostalpn"),
            nullable=False,
            postgresql_using='alpn::proxyhostalpn'
            )
    elif dialect == 'mysql':
        op.alter_column(
            'hosts', 
            'alpn',
            existing_type=sa.String(14),
            type_=mysql.ENUM(*alpn_enum),
            nullable=False,
            )
    else:
        with op.batch_alter_table('hosts') as batch_op:
            batch_op.alter_column(
                'alpn',
                existing_type=sa.String(14),
                type_=sa.VARCHAR(length=14),
                nullable=False,
                existing_server_default=sa.text("'none'"),
                )
    # ### end Alembic commands ###
